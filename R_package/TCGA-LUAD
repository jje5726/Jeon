
### TCGA data(TCGA_LUAD)

query.exp.hg38 <- GDCquery(             ##TCGA LUAD project
  project = "TCGA-LUAD", 
  data.category = "Transcriptome Profiling", 
  data.type = "Gene Expression Quantification", 
  workflow.type = "STAR - Counts")        ##STAR - Counts 

GDCdownload(query.exp.hg38)            ##

expdat <- GDCprepare(                  ## exp.rda 
  query = query.exp.hg38,
  save = TRUE, 
  save.filename = "exp.rda"
)

data <- GDCprepare(query = query.exp.hg38)     ##




### clinical data
datatable(
  as.data.frame(colData(data)),   ##DT >>HTML table
  options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),  ##table, 
  rownames = FALSE
)

### expr data 
datatable(
  assay(data)[1:20,],            
  options = list(scrollX = TRUE, keys = TRUE, pageLength = 5), 
  rownames = TRUE
)

row_df=as.data.frame(rowData(data)) 
col_df=as.data.frame(colData(data)) 
LUAD_expression <- assay(data) 
LUAD_expression <- as.data.frame(LUAD_expression)  
LUAD_expression$ENSEMBL <- rownames(LUAD_expression) 
row_df$ENSEMBL <-rownames(row_df) 
row_df <- row_df[,c(7,11)] 
LUAD_expression_df=merge(LUAD_expression,row_df,by='ENSEMBL') 
LUAD_expression_df=LUAD_expression_df[,-1] 
LUAD_expression_df=aggregate(. ~ gene_name, data = LUAD_expression_df, mean)  
rownames(LUAD_expression_df)<-LUAD_expression_df$gene_name  
LUAD_expression_df=LUAD_expression_df[,-1] 



